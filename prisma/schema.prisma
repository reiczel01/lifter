// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id                      String       @id @default(cuid())
  name                    String
  surname                 String
  email                   String       @unique
  password                String
  licenceNumber           String?
  peselNumber             String?
  permissionsValidityDate DateTime?
  desabled                Boolean      @default(false)
  role                    String?      @default("operator")
  createdAt               DateTime     @default(now())
  updatedAt               DateTime     @updatedAt
  permissions             Permission[]
  userLog                 UserLog[]
  fault                   Fault[]
  tasks                   Tasks[]
}

model Tasks {
  id          Int      @id @default(autoincrement())
  title       String
  description String   @db.LongText
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  updatedBy   String
  isFinished  Boolean  @default(false)
  isStarted   Boolean  @default(false)
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
}

model Equipment {
  id                 Int          @id @default(autoincrement())
  registrationNumber String       @unique
  serialNumber       String       @unique
  liftingCapacityKg  Int
  model              String
  constructionYear   Int
  validityDate       DateTime
  protocolFilePath   String
  decisionFilePath   String
  manualFilePath     String
  deviceSchematics   String
  image              String
  type               Type[]
  permissions        Permission[]
  fault              Fault[]
  userLog            UserLog[]
}

model Type {
  id          Int         @id @default(autoincrement())
  label       String
  value       String
  description String      @db.LongText
  equipment   Equipment[]
}

model Fault {
  id          Int         @id @default(autoincrement())
  present     Boolean
  title       String
  description String?     @db.LongText
  solution    String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user        User        @relation(fields: [userId], references: [id])
  userId      String
  equipment   Equipment[]
}

model Permission {
  id        Int         @id @default(autoincrement())
  name      String
  equipment Equipment[]
  user      User[]
}

model UserLog {
  id          Int       @id @default(autoincrement())
  comment     String    @default("Brak uwag")
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  equipment   Equipment @relation(fields: [equipmentId], references: [id])
  equipmentId Int
}
