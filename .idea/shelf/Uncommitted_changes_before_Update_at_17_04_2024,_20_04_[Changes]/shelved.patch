Index: .idea/copilot/chatSessions/xd.lck
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Private property of Exodus: 4173@mac-mini-mateusz.home\n\njetbrains.exodus.io.LockingManager.lock(LockingManager.kt:88)\njetbrains.exodus.io.LockingManager.lock(LockingManager.kt:39)\njetbrains.exodus.io.FileDataWriter.lock(FileDataWriter.kt:70)\njetbrains.exodus.log.Log.tryLock(Log.kt:804)\njetbrains.exodus.log.Log.<init>(Log.kt:117)\njetbrains.exodus.env.Environments.newLogInstance(Environments.kt:117)\njetbrains.exodus.env.Environments.newLogInstance(Environments.kt:81)\njetbrains.exodus.env.Environments.newLogInstance(Environments.kt:77)\njetbrains.exodus.env.Environments$newInstance$4.invoke(Environments.kt:46)\njetbrains.exodus.env.Environments$newInstance$4.invoke(Environments.kt:46)\njetbrains.exodus.env.Environments.prepare(Environments.kt:120)\njetbrains.exodus.env.Environments.newInstance(Environments.kt:46)\nkotlinx.dnq.store.container.EntityStoreHelperKt.createTransientEntityStore(EntityStoreHelper.kt:40)\nkotlinx.dnq.store.container.EntityStoreHelperKt.createTransientEntityStore(EntityStoreHelper.kt:31)\nkotlinx.dnq.store.container.EntityStoreHelperKt.createTransientEntityStore$default(EntityStoreHelper.kt:30)\ncom.github.copilot.chat.session.persistence.xodus.XdChatSessionPersistenceService.initStore(XdChatSessionPersistenceService.kt:115)\ncom.github.copilot.chat.session.persistence.xodus.XdChatSessionPersistenceService.<init>(XdChatSessionPersistenceService.kt:22)\ncom.github.copilot.chat.session.persistence.xodus.XdChatSessionPersistenceService.<init>(XdChatSessionPersistenceService.kt:15)\ncom.github.copilot.chat.session.persistence.ChatSessionPersistenceServiceKt.ChatSessionPersistenceService(ChatSessionPersistenceService.kt:43)\ncom.github.copilot.chat.session.persistence.ChatSessionPersistenceServiceKt.chatSessionsPersistenceService(ChatSessionPersistenceService.kt:53)\ncom.github.copilot.chat.session.ChatSessionManager.<init>(ChatSessionManager.kt:45)\ncom.github.copilot.chat.session.ChatSessionManager.<init>(ChatSessionManager.kt:25)\ncom.github.copilot.chat.window.CopilotChatToolWindow.onCopilotReady(CopilotChatToolWindow.kt:133)\ncom.github.copilot.chat.window.CopilotChatToolWindow.access$onCopilotReady(CopilotChatToolWindow.kt:40)\ncom.github.copilot.chat.window.CopilotChatToolWindow$initCopilotStatusListener$1.invoke(CopilotChatToolWindow.kt:118)\ncom.github.copilot.chat.window.CopilotChatToolWindow$initCopilotStatusListener$1.invoke(CopilotChatToolWindow.kt:115)\ncom.github.copilot.status.CopilotAuthStatusKt.subscribeToCopilotAuthStatus$lambda$0(CopilotAuthStatus.kt:44)\ncom.intellij.util.messages.impl.MessageBusImplKt.invokeMethod(MessageBusImpl.kt:700)\ncom.intellij.util.messages.impl.MessageBusImplKt.invokeListener(MessageBusImpl.kt:664)\ncom.intellij.util.messages.impl.MessageBusImplKt.deliverMessage(MessageBusImpl.kt:423)\ncom.intellij.util.messages.impl.MessageBusImplKt.pumpWaiting(MessageBusImpl.kt:402)\ncom.intellij.util.messages.impl.MessageBusImplKt.access$pumpWaiting(MessageBusImpl.kt:1)\ncom.intellij.util.messages.impl.MessagePublisher.invoke(MessageBusImpl.kt:461)\njdk.proxy4/jdk.proxy4.$Proxy177.onCopilotStatus(Unknown Source)\ncom.github.copilot.status.CopilotStatusService.notifyApplication(CopilotStatusService.java:76)\ncom.github.copilot.status.CopilotStatusService.notifyApplication(CopilotStatusService.java:64)\ncom.github.copilot.github.GitHubAuthStartupActivity.handleAuthNotifications(GitHubAuthStartupActivity.java:54)\ncom.github.copilot.github.GitHubAuthStartupActivity.execute(GitHubAuthStartupActivity.java:35)\ncom.intellij.ide.startup.impl.StartupManagerImplKt$launchActivity$1.invokeSuspend(StartupManagerImpl.kt:482)\nkotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\nkotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)\nkotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)\nkotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)\nkotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)\nkotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/copilot/chatSessions/xd.lck b/.idea/copilot/chatSessions/xd.lck
--- a/.idea/copilot/chatSessions/xd.lck	(revision a04cec4e0e6f2ecb1e012eb0a4afb3660c7c4a9d)
+++ b/.idea/copilot/chatSessions/xd.lck	(date 1713377052070)
@@ -1,4 +1,4 @@
-Private property of Exodus: 4173@mac-mini-mateusz.home
+Private property of Exodus: 11230@mac-mini-mateusz.home
 
 jetbrains.exodus.io.LockingManager.lock(LockingManager.kt:88)
 jetbrains.exodus.io.LockingManager.lock(LockingManager.kt:39)
@@ -26,22 +26,60 @@
 com.github.copilot.chat.window.CopilotChatToolWindow.access$onCopilotReady(CopilotChatToolWindow.kt:40)
 com.github.copilot.chat.window.CopilotChatToolWindow$initCopilotStatusListener$1.invoke(CopilotChatToolWindow.kt:118)
 com.github.copilot.chat.window.CopilotChatToolWindow$initCopilotStatusListener$1.invoke(CopilotChatToolWindow.kt:115)
-com.github.copilot.status.CopilotAuthStatusKt.subscribeToCopilotAuthStatus$lambda$0(CopilotAuthStatus.kt:44)
-com.intellij.util.messages.impl.MessageBusImplKt.invokeMethod(MessageBusImpl.kt:700)
-com.intellij.util.messages.impl.MessageBusImplKt.invokeListener(MessageBusImpl.kt:664)
-com.intellij.util.messages.impl.MessageBusImplKt.deliverMessage(MessageBusImpl.kt:423)
-com.intellij.util.messages.impl.MessageBusImplKt.pumpWaiting(MessageBusImpl.kt:402)
-com.intellij.util.messages.impl.MessageBusImplKt.access$pumpWaiting(MessageBusImpl.kt:1)
-com.intellij.util.messages.impl.MessagePublisher.invoke(MessageBusImpl.kt:461)
-jdk.proxy4/jdk.proxy4.$Proxy177.onCopilotStatus(Unknown Source)
-com.github.copilot.status.CopilotStatusService.notifyApplication(CopilotStatusService.java:76)
-com.github.copilot.status.CopilotStatusService.notifyApplication(CopilotStatusService.java:64)
-com.github.copilot.github.GitHubAuthStartupActivity.handleAuthNotifications(GitHubAuthStartupActivity.java:54)
-com.github.copilot.github.GitHubAuthStartupActivity.execute(GitHubAuthStartupActivity.java:35)
-com.intellij.ide.startup.impl.StartupManagerImplKt$launchActivity$1.invokeSuspend(StartupManagerImpl.kt:482)
+com.github.copilot.status.CopilotAuthStatusKt.subscribeToCopilotAuthStatus(CopilotAuthStatus.kt:27)
+com.github.copilot.chat.window.CopilotChatToolWindow.initCopilotStatusListener(CopilotChatToolWindow.kt:115)
+com.github.copilot.chat.window.CopilotChatToolWindow.<init>(CopilotChatToolWindow.kt:59)
+com.github.copilot.chat.window.CopilotChatToolWindow.<init>(CopilotChatToolWindow.kt:40)
+com.github.copilot.chat.window.CopilotChatToolWindowFactory.init(CopilotChatToolWindowFactory.kt:18)
+com.intellij.openapi.wm.impl.ToolWindowManagerImpl.registerToolWindow$intellij_platform_ide_impl(ToolWindowManagerImpl.kt:1123)
+com.intellij.toolWindow.ToolWindowSetInitializerKt.registerToolWindows(ToolWindowSetInitializer.kt:223)
+com.intellij.toolWindow.ToolWindowSetInitializerKt.access$registerToolWindows(ToolWindowSetInitializer.kt:1)
+com.intellij.toolWindow.ToolWindowSetInitializer$createAndLayoutToolWindows$entries$1$1.invokeSuspend(ToolWindowSetInitializer.kt:141)
+com.intellij.toolWindow.ToolWindowSetInitializer$createAndLayoutToolWindows$entries$1$1.invoke(ToolWindowSetInitializer.kt)
+com.intellij.toolWindow.ToolWindowSetInitializer$createAndLayoutToolWindows$entries$1$1.invoke(ToolWindowSetInitializer.kt)
+kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
+kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
+kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
+com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span(tracer.kt:53)
+com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span$default(tracer.kt:49)
+com.intellij.toolWindow.ToolWindowSetInitializer$createAndLayoutToolWindows$entries$1.invokeSuspend(ToolWindowSetInitializer.kt:138)
 kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
 kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
-kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
-kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
-kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
-kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
+com.intellij.openapi.application.TransactionGuardImpl$1.run(TransactionGuardImpl.java:194)
+com.intellij.openapi.application.impl.ApplicationImpl.runIntendedWriteActionOnCurrentThread(ApplicationImpl.java:843)
+com.intellij.openapi.application.impl.ApplicationImpl$4.run(ApplicationImpl.java:463)
+com.intellij.openapi.application.impl.RwLockHolder.runWithEnabledImplicitRead(RwLockHolder.kt:75)
+com.intellij.openapi.application.impl.RwLockHolder.runWithImplicitRead(RwLockHolder.kt:67)
+com.intellij.openapi.application.impl.ApplicationImpl.runWithImplicitRead(ApplicationImpl.java:1436)
+com.intellij.openapi.application.impl.FlushQueue.doRun(FlushQueue.java:82)
+com.intellij.openapi.application.impl.FlushQueue.runNextEvent(FlushQueue.java:124)
+com.intellij.openapi.application.impl.FlushQueue.flushNow(FlushQueue.java:44)
+java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
+java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:792)
+java.desktop/java.awt.EventQueue$3.run(EventQueue.java:739)
+java.desktop/java.awt.EventQueue$3.run(EventQueue.java:733)
+java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
+java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
+java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:761)
+com.intellij.ide.IdeEventQueue.defaultDispatchEvent(IdeEventQueue.kt:695)
+com.intellij.ide.IdeEventQueue._dispatchEvent$lambda$12(IdeEventQueue.kt:589)
+com.intellij.openapi.application.impl.RwLockHolder.runWithoutImplicitRead(RwLockHolder.kt:44)
+com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.kt:589)
+com.intellij.ide.IdeEventQueue.access$_dispatchEvent(IdeEventQueue.kt:72)
+com.intellij.ide.IdeEventQueue$dispatchEvent$processEventRunnable$1$1$1.compute(IdeEventQueue.kt:355)
+com.intellij.ide.IdeEventQueue$dispatchEvent$processEventRunnable$1$1$1.compute(IdeEventQueue.kt:354)
+com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(CoreProgressManager.java:793)
+com.intellij.ide.IdeEventQueue$dispatchEvent$processEventRunnable$1$1.invoke(IdeEventQueue.kt:354)
+com.intellij.ide.IdeEventQueue$dispatchEvent$processEventRunnable$1$1.invoke(IdeEventQueue.kt:349)
+com.intellij.ide.IdeEventQueueKt.performActivity$lambda$1(IdeEventQueue.kt:1014)
+com.intellij.openapi.application.TransactionGuardImpl.performActivity(TransactionGuardImpl.java:106)
+com.intellij.ide.IdeEventQueueKt.performActivity(IdeEventQueue.kt:1014)
+com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$7(IdeEventQueue.kt:349)
+com.intellij.openapi.application.impl.ApplicationImpl.runIntendedWriteActionOnCurrentThread(ApplicationImpl.java:848)
+com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.kt:391)
+java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:207)
+java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:128)
+java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:117)
+java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:113)
+java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:105)
+java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:92)
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"b6842891-5e4d-4e8a-bcdb-54b7728620dc\" name=\"Changes\" comment=\"Register, RegisterEquipment(just created not done)\">\n      <change afterPath=\"$PROJECT_DIR$/.idea/copilot/chatSessions/00000000000.xd\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/copilot/chatSessions/blobs/version\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/copilot/chatSessions/xd.lck\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/prettier.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.prettierrc.json\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/components/EquipmentRegistration.tsx\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/components/Register.tsx\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/public/Lifter-logo-only.png\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/public/Lifter-logos.jpeg\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/public/Lifter-logos_black.png\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/public/Lifter-logos_transparent.png\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/public/Lifter-logos_white.png\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.eslintrc.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.eslintrc.json\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/app/page.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/page.tsx\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/components/LogIn.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/components/LogIn.tsx\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/package-lock.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/package-lock.json\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/package.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/package.json\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;customColor&quot;: &quot;&quot;,\n  &quot;associatedIndex&quot;: 0\n}</component>\n  <component name=\"ProjectId\" id=\"2f7hcmugwCol6qJUsQFcroeDyYQ\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/mateuszreczulski/Documents/Programowanie/lifter/public&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.standard&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.standard&quot;: &quot;&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;prettierjs.PrettierConfiguration.Package&quot;: &quot;/Users/mateuszreczulski/Documents/Programowanie/lifter/node_modules/prettier&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\n    &quot;ts.external.directory.path&quot;: &quot;/Users/mateuszreczulski/Documents/Programowanie/lifter/node_modules/typescript/lib&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/public\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"b6842891-5e4d-4e8a-bcdb-54b7728620dc\" name=\"Changes\" comment=\"\" />\n      <created>1713158107496</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1713158107496</updated>\n      <workItem from=\"1713158109905\" duration=\"4356000\" />\n      <workItem from=\"1713201340745\" duration=\"1156000\" />\n      <workItem from=\"1713202511409\" duration=\"9907000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"init\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1713201042840</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1713201042840</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"2\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"init\" />\n    <MESSAGE value=\"Register, RegisterEquipment(just created not done)\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Register, RegisterEquipment(just created not done)\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision a04cec4e0e6f2ecb1e012eb0a4afb3660c7c4a9d)
+++ b/.idea/workspace.xml	(date 1713375359172)
@@ -4,26 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="b6842891-5e4d-4e8a-bcdb-54b7728620dc" name="Changes" comment="Register, RegisterEquipment(just created not done)">
-      <change afterPath="$PROJECT_DIR$/.idea/copilot/chatSessions/00000000000.xd" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/copilot/chatSessions/blobs/version" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/copilot/chatSessions/xd.lck" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/prettier.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.prettierrc.json" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/components/EquipmentRegistration.tsx" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/components/Register.tsx" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/public/Lifter-logo-only.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/public/Lifter-logos.jpeg" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/public/Lifter-logos_black.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/public/Lifter-logos_transparent.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/public/Lifter-logos_white.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.eslintrc.json" beforeDir="false" afterPath="$PROJECT_DIR$/.eslintrc.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/page.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/components/LogIn.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/LogIn.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
-    </list>
+    <list default="true" id="b6842891-5e4d-4e8a-bcdb-54b7728620dc" name="Changes" comment="Register, RegisterEquipment(just created not done)" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -78,7 +59,7 @@
       <updated>1713158107496</updated>
       <workItem from="1713158109905" duration="4356000" />
       <workItem from="1713201340745" duration="1156000" />
-      <workItem from="1713202511409" duration="9907000" />
+      <workItem from="1713202511409" duration="10634000" />
     </task>
     <task id="LOCAL-00001" summary="init">
       <option name="closed" value="true" />
@@ -88,7 +69,15 @@
       <option name="project" value="LOCAL" />
       <updated>1713201042840</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="Register, RegisterEquipment(just created not done)">
+      <option name="closed" value="true" />
+      <created>1713213847924</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1713213847924</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
